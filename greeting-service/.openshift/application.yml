---
apiVersion: v1
kind: List
items:
- apiVersion: apps.openshift.io/v1
  kind: DeploymentConfig
  metadata:
    labels:
      app: greeting-service
    name: greeting-service
  spec:
    replicas: 1
    revisionHistoryLimit: 2
    strategy:
      rollingParams:
        timeoutSeconds: 3600
      type: Rolling
    template:
      metadata:
        annotations:
          sidecar.istio.io/inject: "true"
        labels:
          app: greeting-service
      spec:
        containers:
        - env:
          - name: KUBERNETES_NAMESPACE
            valueFrom:
              fieldRef:
                fieldPath: metadata.namespace
          image: greeting:latest
          imagePullPolicy: Always
          livenessProbe:
            exec:
              command:
              - curl
              - http://localhost:8080/health
            initialDelaySeconds: 100
          name: thorntail
          ports:
          - containerPort: 8080
            name: http
            protocol: TCP
          - containerPort: 9779
            name: prometheus
            protocol: TCP
          - containerPort: 8778
            name: jolokia
            protocol: TCP
          readinessProbe:
            exec:
              command:
              - curl
              - http://localhost:8080/health
            initialDelaySeconds: 10
          securityContext:
            privileged: false
    triggers:
    - type: ConfigChange
    - imageChangeParams:
        automatic: true
        containerNames:
        - thorntail
        from:
          kind: ImageStreamTag
          name: greeting:latest
      type: ImageChange
- apiVersion: v1
  kind: Service
  metadata:
    name: greeting-service
    labels:
      app: greeting-service
  spec:
    ports:
    - port: 8080
      name: http
    selector:
      app: greeting-service
- apiVersion: v1
  kind: Service
  metadata:
    labels:
      app: name-service
    name: name-service
  spec:
    ports:
    - name: http
      port: 8080
    selector:
      app: name-service
- apiVersion: networking.istio.io/v1alpha3
  kind: Gateway
  metadata:
    name: servicemesh-greeting-gateway
  spec:
    selector:
      istio: ingressgateway # use istio default controller
    servers:
    - port:
        number: 80
        name: http
        protocol: HTTP
      hosts:
      - "*"
- apiVersion: networking.istio.io/v1alpha3
  kind: VirtualService
  metadata:
    name: servicemesh-greeting
  spec:
    hosts:
    - "*"
    gateways:
    - servicemesh-greeting-gateway
    http:
    - match:
      - uri:
          prefix: /greeting/
      - uri:
          prefix: /greeting
      rewrite:
        uri: /
      route:
      - destination:
          host: greeting-service
          port:
            number: 8080
- apiVersion: networking.istio.io/v1alpha3
  kind: VirtualService
  metadata:
    name: name-service
  spec:
    hosts:
    - name-service
    http:
    - route:
      - destination:
          host: name-service
          subset: boring
